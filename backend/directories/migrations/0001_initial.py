# Generated by Django 5.0.7 on 2024-07-30 06:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ambient_temperatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Допустимая температура окружающей среды',
                'verbose_name_plural': 'Допустимые температуры окружающей среды',
                'db_table': 's_ambient_temperatures',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
                'db_table': 's_currency',
            },
        ),
        migrations.CreateModel(
            name='Inv_accurancy_frenq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Точность регулирования частоты',
                'verbose_name_plural': 'Точность регулирования частоты',
                'db_table': 's_inv_accurancy_frenq',
            },
        ),
        migrations.CreateModel(
            name='Inv_breake_module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип тормозного модуля',
                'verbose_name_plural': 'Типы тормозного модуля',
                'db_table': 's_inv_breake_module',
            },
        ),
        migrations.CreateModel(
            name='Inv_DC_drossel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип DC дросселя',
                'verbose_name_plural': 'Типы DC дросселя',
                'db_table': 's_inv_DC_drossel',
            },
        ),
        migrations.CreateModel(
            name='Inv_EMC_drossel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип EMC дросселя',
                'verbose_name_plural': 'Типы EMC дросселя',
                'db_table': 's_inv_EMC_drossel',
            },
        ),
        migrations.CreateModel(
            name='Inv_input_voltage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Выходное напряжение ПЧ',
                'verbose_name_plural': 'Выходные напряжения ПЧ',
                'db_table': 's_inv_input_voltage',
            },
        ),
        migrations.CreateModel(
            name='Inv_output_voltage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Выходное напряжение ПЧ',
                'verbose_name_plural': 'Выходные напряжения ПЧ',
                'db_table': 's_inv_output_voltage',
            },
        ),
        migrations.CreateModel(
            name='Inv_sizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(verbose_name='Размер')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Размер инвертоа',
                'verbose_name_plural': 'Размеры инверторов',
                'db_table': 's_size_of_invertors',
            },
        ),
        migrations.CreateModel(
            name='Inv_type_of_overload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_mode', models.CharField(max_length=200, verbose_name='G_режим')),
                ('p_mode', models.CharField(max_length=200, null=True, verbose_name='P_режим')),
            ],
            options={
                'verbose_name': 'Тип перегруки',
                'verbose_name_plural': 'Типы перегруки',
                'db_table': 's_inv_type_of_overload',
            },
        ),
        migrations.CreateModel(
            name='Inv_type_of_panels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип панели',
                'verbose_name_plural': 'Типы панели',
                'db_table': 's_inv_type_of_panel',
            },
        ),
        migrations.CreateModel(
            name='Inv_type_of_signals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип сигнала',
                'verbose_name_plural': 'Типы сигнала',
                'db_table': 's_inv_type_of_signals',
            },
        ),
        migrations.CreateModel(
            name='Items2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Наименование')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'verbose_name': 'Элемент',
                'verbose_name_plural': 'Элементы',
                'db_table': 'd_items2',
            },
        ),
        migrations.CreateModel(
            name='Level_IP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Уровень защиты IP',
                'verbose_name_plural': 'Уровени защиты IP',
                'db_table': 's_level_ip',
            },
        ),
        migrations.CreateModel(
            name='Manufactory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
                'db_table': 's_manufactory',
            },
        ),
        migrations.CreateModel(
            name='Type_of_control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип управления',
                'verbose_name_plural': 'Типы управления',
                'db_table': 's_type_of_control',
            },
        ),
        migrations.CreateModel(
            name='Type_of_items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип элемента',
                'verbose_name_plural': 'Типы элементов',
                'db_table': 's_type_of_items',
            },
        ),
        migrations.CreateModel(
            name='Type_of_options',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип опции',
                'verbose_name_plural': 'Типы опций',
                'db_table': 's_type_of_options',
            },
        ),
        migrations.CreateModel(
            name='Variants_of_control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Вариант управления',
                'verbose_name_plural': 'Варианты управления',
                'db_table': 's_variant_of_control',
            },
        ),
        migrations.CreateModel(
            name='Waiting_period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Срок ожидания',
                'verbose_name_plural': 'Сроки ожидания',
                'db_table': 's_waiting_time',
            },
        ),
        migrations.CreateModel(
            name='Inv_series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_power', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Минимальная мощность')),
                ('max_power', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Максимальная мощность')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
                ('description', models.CharField(max_length=500, verbose_name='Дополнительное описание')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='inv_series', verbose_name='Изображение')),
                ('ambient_temperature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.ambient_temperatures', verbose_name='Допустимая температура окружающей среды')),
                ('output_voltage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_output_voltage', verbose_name='Выходное напряжение')),
                ('type_of_accuracy_freq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_accurancy_frenq', verbose_name='Точность регулирования')),
                ('type_of_overload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_type_of_overload', verbose_name='Тип перегрузки')),
                ('type_of_panel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_type_of_panels', verbose_name='Тип панели')),
                ('level_IP', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.level_ip', verbose_name='Уровень защиты')),
                ('manufactory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.manufactory', verbose_name='Производитель')),
                ('type_of_control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.type_of_control', verbose_name='Тип управления')),
            ],
            options={
                'verbose_name': 'Серия ПЧ',
                'verbose_name_plural': 'Серии ПЧ',
                'db_table': 's_inv_series',
            },
        ),
        migrations.CreateModel(
            name='Inv_spec_of_in_out',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.CharField(max_length=50, verbose_name='Описание входа')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_series')),
                ('signal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_type_of_signals')),
            ],
            options={
                'verbose_name': 'Сигналы входов/выходов',
                'verbose_name_plural': 'Сигналы входов/выходов',
                'db_table': 's_inv_spec_of_in_out',
            },
        ),
        migrations.CreateModel(
            name='Invertors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
                ('p_heavy_g', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='')),
                ('p_pumps_p', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='')),
                ('current_g', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='')),
                ('current_p', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='')),
                ('input_voltage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_input_voltage', verbose_name='Входное напраяжение')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_series', verbose_name='Серия')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_sizes', verbose_name='Размер')),
                ('type_of_break_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_breake_module', verbose_name='Тип тормозного модуля')),
                ('type_of_dc_drossel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_dc_drossel', verbose_name='Тип DC дросселя')),
                ('type_of_emc_drossel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_emc_drossel', verbose_name='Тип EMC дросселя')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.items2', verbose_name='Элемент')),
            ],
            options={
                'verbose_name': 'Преобразователь частоты',
                'verbose_name_plural': 'Преобразователи частоты',
                'db_table': 'd_invertors',
            },
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.currency')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.items2')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
                'db_table': 'd_prices',
            },
        ),
        migrations.AddField(
            model_name='items2',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.type_of_items'),
        ),
        migrations.CreateModel(
            name='Inv_options',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Наименование')),
                ('short_title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Наименование краткое')),
                ('full_title', models.CharField(blank=True, max_length=500, null=True, verbose_name='Наименование полное')),
                ('series', models.CharField(blank=True, max_length=500, null=True, verbose_name='Серии')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.items2', verbose_name='Элемент')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.type_of_options', verbose_name='Типы опции')),
            ],
            options={
                'verbose_name': 'Опции ПЧ',
                'verbose_name_plural': 'Опций ПЧ',
                'db_table': 'd_inv_options',
            },
        ),
        migrations.CreateModel(
            name='Inv_type_of_control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.inv_series')),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.variants_of_control')),
            ],
            options={
                'verbose_name': 'Способ управления для серии ПЧ',
                'verbose_name_plural': 'Способы управления для серии ПЧ',
                'db_table': 's_type_of_serie_controls',
            },
        ),
        migrations.AddField(
            model_name='items2',
            name='waiting_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='directories.waiting_period'),
        ),
    ]
